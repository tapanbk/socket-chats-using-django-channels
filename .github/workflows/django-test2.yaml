name: Django Docker github actions
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
      DJANGO_SECRET_KEY: 'django-insecure-t=q3r)r6mi93#qk&+x(!q7y7)m^_thr2shcedb*$t4$u#4m$1t'
    strategy:
      max-parallel: 1
      matrix:
        python-version: [ 3.9, ]
    steps:
    - uses: actions/checkout@v2.4.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.3.1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@v2.4.0
    - name: Build the images and start the containers
      run: |
        export GITHUB_WORKFLOW=True
        export MODE="Test"
        export PROJECT_NAME="Socket Django channels"
        export DEBUG=True
        export DJANGO_CORS_ORIGIN_ALLOW_ALL=True
        export DJANGO_DB_ENGINE="django.db.backends.postgresql"
        export SECRET_KEY="django-insecure-t=q3r)r6mi93#qk&+x(!q7y7)m^_thr2shcedb*$t4$u#4m$1t"
    - name: Build and run containers
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml up -d
    - name: Run Django tests
      run: |
        docker-compose -f docker-compose.yml exec -T django python manage.py test
    - name: Stop and remove containers
      run: |
        docker-compose -f docker-compose.yml down
        docker rmi -f $(docker images -f "dangling=true" -q) || true