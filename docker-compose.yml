version: '3.7'

networks:
  chat:
    driver: bridge

volumes:
  dbdata: {}  # Volume for PostgreSQL data
  s3_media: {}  # Volume for S3 media storage
  redis: {}  # Volume for Redis data

services:
#  chat_proxy:
#    container_name: chat-proxy  # Name of the Nginx container
#    image: nginx:latest
#    volumes:
#      - ./..docker/nginx:/etc/nginx/conf.d  # Mounting Nginx configuration files
#    ports:
#      - "127.0.0.1:80:80"  # Forwarding host port 80 to container port 80
#      - "127.0.0.1:443:443"  # Forwarding host port 443 to container port 443
#    depends_on:
#      - chat_django  # Dependency on the Django container
#      - chat_postgres
#    networks:
#      - chat

#  chat_s3:
#    image: adobe/s3mock
#    container_name: chat-s3  # Name of the S3 container
#    ports:
#      - '9091:9090'  # Forwarding host port 9090 to container port 9090
#    environment:
#      - initialBuckets=chat_media  # Initial bucket names for S3 storage
#      - root=/app/media
#    volumes:
#      - s3_media:/app/media  # Mounting S3 media volume
#    networks:
#      - chat

  chat_redis:
    container_name: chat-redis  # Name of the Redis container
    image: redis
    ports:
      - 6379:6379  # Forwarding host port 6379 to container port 6379
    volumes:
      - redis:/data  # Mounting Redis data volume
    networks:
      - chat
#
#  chat_postgres:
#    container_name: chat-postgres  # Name of the PostgreSQL container
#    image: postgres:15.3
#    volumes:
#      - postgres_data_dev:/var/lib/postgresql/data  # Mounting PostgreSQL data volume
#    ports:
#      - 5432:5432  # Forwarding host port 5432 to container port 5432
#    environment:
#      - POSTGRES_DB=postgres_chat
#      - POSTGRES_USER=postgres_chat
#      - POSTGRES_PASSWORD=postgres_chat
#      - POSTGRES_PORT=5432
#    healthcheck:
#      test: [ "CMD", "pg_isready", "-q", "-d", "postgres_chat", "-U", "postgres_chat" ]
#      interval: 5s
#      timeout: 5s
#      retries: 5
#    networks:
#      - chat
#    restart: always

  chat_django:
    container_name: chat_django  # Name of the Django container
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000  # Running Django development server
    ports:
      - 8000:8000  # Forwarding host port 8000 to container port 8000
    depends_on:
      - chat_postgres
#      - chat_redis
#      - chat_s3
    environment:
      - DJANGO_READ_DOT_ENV_FILE=true
    volumes:
      - .:/home/chat/socket_chat  # Mounting project code
    networks:
      - chat

  chat_postgres:
    image: postgres:alpine
    container_name: chat_postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
    ports:
      - 5433:5432
    volumes:
      - dbdata:/var/lib/postgresql
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - chat
    restart: always





