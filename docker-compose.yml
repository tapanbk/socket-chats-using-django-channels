version: '3'

networks:
  chat:
    driver: bridge

volumes:
  postgres_data:
  s3_media: { }
  redis: { }

services:
  redis:
    image: redis:latest
    container_name: redis_server
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      - chat
  django:
    image: python:3.8
    container_name: django_app
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./django_app:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    environment:
      - DJANGO_READ_DOT_ENV_FILE=true
      - DJANGO_DB_HOST=postgres
      - DJANGO_DB_PORT=5432
      - DJANGO_DB_NAME=postgres
      - DJANGO_DB_USER=postgres
      - DJANGO_DB_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  postgres:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - chat
